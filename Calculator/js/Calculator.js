class Calculator {
    constructor() {
        this.aktualniVstup = '';  // Pro ukl√°d√°n√≠ cel√©ho zad√°n√≠
        this.vysledekZobrazen = false;  // Indik√°tor, zda byl zobrazen v√Ωsledek
    }

    pridejZnak(znak) {
        if (this.vysledekZobrazen) {
            // Pokud u≈æivatel klikl na ƒç√≠slo, zaƒçne nov√Ω p≈ô√≠klad
            if (!isNaN(znak)) {
                this.aktualniVstup = '';  // Vyma≈æte p≈ôedchoz√≠ v√Ωsledek
            }
            this.vysledekZobrazen = false;  // Resetuje indik√°tor
        }
        // P≈ôid√° znak k aktu√°ln√≠mu vstupu a zobraz√≠ ho
        this.aktualniVstup += znak;
        const displej = document.getElementById('displej');
        displej.value = this.aktualniVstup;

        // Automatick√© posouv√°n√≠ obsahu doprava
        displej.scrollLeft = displej.scrollWidth;
    }

    vypocitej() {
        try {
            const vysledek = this.vyhodnotVyraz(this.aktualniVstup);
            const formatovanyVysledek = vysledek.toLocaleString('cs-CZ');  // Naform√°tuje ƒç√≠slo s oddƒõlovaƒçi tis√≠c≈Ø
            document.getElementById('displej').value = formatovanyVysledek;
            this.aktualniVstup = vysledek.toString();  // Ulo≈æ√≠ v√Ωsledek jako nov√© zad√°n√≠
            this.vysledekZobrazen = true;  // Nastav√≠ indik√°tor na true, aby se vƒõdƒõlo, ≈æe byl zobrazen v√Ωsledek
        } catch (error) {
            document.getElementById('displej').value = 'Error: chybn√© zad√°n√≠';
            this.aktualniVstup = '';
            this.vysledekZobrazen = false;  // Resetuje indik√°tor p≈ôi chybƒõ
        }
    }

    vyhodnotVyraz(vyraz) {
        try {
            // Nahrad√≠ symbol pro n√°soben√≠
            vyraz = vyraz.replace(/ùóë/g, '*').replace(/,/g, '.');

            // Odstran√≠ jak√©koliv pr√°zdn√© mezery
            vyraz = vyraz.replace(/\s+/g, '');

            // Kontrola na nepovolen√© znaky (kromƒõ ƒç√≠sel a oper√°tor≈Ø)
            if (/[^0-9+\-*/.%]/.test(vyraz)) {
                return NaN;
            }

            // Zpracov√°n√≠ procent
            vyraz = vyraz.replace(/(\d+(\.\d+)?)%/g, (match, num) => {
                // Najde ƒç√≠slo p≈ôed procentem
                const prevExpression = vyraz.slice(0, vyraz.indexOf(match));
                const lastNumberMatch = prevExpression.match(/(\d+(\.\d+)?)(?!.*(\d+(\.\d+)?))/);
                if (lastNumberMatch) {
                    const lastNumber = lastNumberMatch[0];
                    return `(${lastNumber} * ${num} / 100)`;
                } else {
                    return `(${num} / 100)`;
                }
            });

            // Provede v√Ωpoƒçet
            let vysledek = new Function('return ' + vyraz)(); // Pou≈æit√≠ funkce pro bezpeƒçn√© vyhodnocen√≠

            // Kontrola na nespr√°vn√© v√Ωsledky
            if (isNaN(vysledek) || !isFinite(vysledek)) {
                return `Error: chybn√© zad√°n√≠`;
            }
            if (vysledek) {
                let zadanText = vyraz;

                // Kontrola d√©lky a p≈ôid√°n√≠ zalomen√≠ po ka≈æd√Ωch 20 znac√≠ch
                if (zadanText.length > 27) {
                    zadanText = zadanText.match(/.{1,27}/g).join('\n'); // Zalomen√≠ po 28 znac√≠ch
                }
                document.getElementById('zadanText').innerText = zadanText;
            }

            return vysledek;
        } catch (error) {
            return `Error: chybn√© zad√°n√≠`;
        }
    }

    vymaz() {
        // Vyma≈æe v≈°echno
        this.aktualniVstup = '';
        document.getElementById('displej').value = '0';
        this.vysledekZobrazen = false;  // Resetuje indik√°tor
        document.getElementById('zadanText').innerText = '';
    }
}